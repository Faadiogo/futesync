Desenvolver um aplicativo de organiza√ß√£o de partidas esportivas amadoras, com foco em gerenciamento de presen√ßa, estat√≠sticas de jogo, rede social integrada e avalia√ß√µes de jogadores.

üíª Arquitetura
Backend: Node.js (Fastify ou Express)

Banco de Dados: Supabase (PostgreSQL)

Autentica√ß√£o: Supabase Auth (JWT nativo, login com Google e E-mail)

Notifica√ß√µes: WebSockets (Socket.io) + E-mail (via Supabase SMTP)

Agendamentos: node-cron

WebSockets: Socket.io para atualiza√ß√µes em tempo real

üìä Modelagem de Dados (Supabase/PostgreSQL)
üßë usuarios
sql
Copiar
Editar
id UUID PK, nome TEXT, email TEXT UNIQUE, foto_url TEXT,
role TEXT CHECK (jogador/moderador/admin), created_at TIMESTAMP DEFAULT NOW()
‚öΩ partidas
sql
Copiar
Editar
id UUID PK, data TIMESTAMP, local TEXT, 
status TEXT CHECK (agendada/em_andamento/finalizada),
lista_liberada BOOLEAN, bloqueio_confirmacao BOOLEAN
‚úÖ confirmacoes
sql
Copiar
Editar
id UUID PK, usuario_id FK, partida_id FK,
confirmado BOOLEAN, compareceu BOOLEAN,
horario_confirmacao TIMESTAMP, horario_cancelamento TIMESTAMP,
UNIQUE(usuario_id, partida_id)
üìà estatisticas
sql
Copiar
Editar
id UUID PK, partida_id FK, usuario_id FK,
gols INT, assistencias INT, cartoes_amarelos INT, cartoes_vermelhos INT,
aprovado_por UUID[], status TEXT CHECK (pendente/aprovado/rejeitado)
üìù posts
sql
Copiar
Editar
id UUID PK, partida_id FK, texto TEXT,
curtidas UUID[], comentarios JSONB[]
üåü avaliacoes
sql
Copiar
Editar
id UUID PK, avaliador_id FK, jogador_id FK, partida_id FK,
nota INT (0-10), comentario TEXT
üîé Views (exemplo)
sql
Copiar
Editar
CREATE VIEW indice_frequencia AS
SELECT usuario_id,
  (COUNT(CASE WHEN compareceu THEN 1 END)::FLOAT / NULLIF(COUNT(CASE WHEN confirmado THEN 1 END), 0) * 100) AS indice_presenca,
  (COUNT(CASE WHEN compareceu AND NOT confirmado THEN 1 END)::FLOAT / NULLIF(COUNT(CASE WHEN NOT confirmado THEN 1 END), 0) * 100) AS indice_intruso
FROM confirmacoes
GROUP BY usuario_id;
üîÑ Fluxos do Sistema
1Ô∏è‚É£ Autentica√ß√£o: JWT do Supabase + roles na tabela usuarios
2Ô∏è‚É£ Confirma√ß√£o de presen√ßa: Liberada 24h antes da partida; bloqueio 1h antes (via cron)
3Ô∏è‚É£ P√≥s-jogo: Moderadores confirmam presen√ßa real e validam estat√≠sticas
4Ô∏è‚É£ Rede social: Postagens vinculadas √† partida, curtidas, coment√°rios
5Ô∏è‚É£ Avalia√ß√µes: Jogadores avaliam uns aos outros ap√≥s partidas

‚ö° Funcionalidades de Backend
‚úÖ Endpoints REST para usu√°rios, partidas, confirma√ß√µes, estat√≠sticas, posts e avalia√ß√µes
‚úÖ WebSocket para notifica√ß√£o de novos posts e altera√ß√µes no status de partidas
‚úÖ Jobs autom√°ticos (node-cron) para liberar lista e bloquear confirma√ß√µes
‚úÖ Verifica√ß√£o de JWT e roles nas rotas
‚úÖ C√°lculo de √≠ndices de presen√ßa e intruso via views ou triggers

üéØ Objetivo
Um app capaz de organizar partidas, registrar presen√ßa e desempenho dos jogadores, promover engajamento social e oferecer m√©tricas confi√°veis de participa√ß√£o.

